---
const pathname = new URL(Astro.request.url).pathname;
---

<nav>
  <button
    class="hamburger"
    aria-expanded="false"
    aria-label="Öffne Navigationsmenu"
  >
    <span class="line line-one"></span>
    <span class="line line-two"></span>
    <span class="line line-three"></span>
  </button>
  <ul class="nav-links">
    <li>
      <a href="/" class={pathname === "/" ? "active" : ""}>Startseite</a>
    </li>
    <li>
      <a href="/gartenbau" class={pathname === "/gartenbau" ? "active" : ""}>
        Gartenbau
      </a>
    </li>
    <li>
      <a
        href="/gartenunterhalt"
        class={pathname === "/gartenunterhalt" ? "active" : ""}
      >
        Gartenunterhalt
      </a>
    </li>
    <li>
      <a href="/grabpflege" class={pathname === "/grabpflege" ? "active" : ""}>
        Grabpflege
      </a>
    </li>
    <li>
      <a href="/ueber-uns" class={pathname === "/ueber-uns" ? "active" : ""}>
        Über uns
      </a>
    </li>
    <li>
      <a href="/stellen" class={pathname === "/stellen" ? "active" : ""}
        >Offene Stellen</a
      >
    </li>
    <li>
      <a href="/kontakt" class={pathname === "/kontakt" ? "active" : ""}>
        Kontakt
      </a>
    </li>
    <li class="close-menu-li">
      <button class="close-menu">Navigationsmenu schliessen</button>
    </li>
  </ul>
</nav>

<style>
  .hamburger {
    box-sizing: content-box;
    width: 40px;
    min-width: 40px;
    padding: var(--spacing-0_5) var(--spacing-1);
    margin-inline-end: var(--spacing-0_5);
    border: none;
    background: none;

    @media (--breakpoint-min-md) {
      display: none;
    }
  }

  .hamburger {
    .line {
      display: block;
      height: 4px;
      border-radius: 4px;
      margin: 4px 0;
      background-color: var(--color-black-main);
      transform: none;
      transition: all 0.3s ease-in-out;
    }

    &[aria-expanded="true"] {
      .line-one {
        transform: translateY(6px) rotate(45deg);
      }
      .line-two {
        transform: scaleX(0);
      }
      .line-three {
        transform: translateY(-10px) rotate(-45deg);
      }
    }
  }

  .nav-links {
    padding: var(--spacing-1) 0;
    margin: 0;
    border-block-start: 1px solid var(--color-black-main);
    list-style: none;

    position: fixed;
    top: var(--header-height);
    bottom: 0;
    left: 0;
    right: 0;
    overflow: scroll;

    display: flex;
    flex-direction: column;
    align-items: center;

    background: var(--color-white-main);
    transform: translateX(100%);
    transition: transform 0.3s ease-out;

    @media (--breakpoint-min-md) {
      position: static;
      transform: none;
      flex-direction: row;
      padding: 0;
      border: none;
    }
  }

  .hamburger[aria-expanded="true"] ~ .nav-links {
    transform: translateX(0);
  }

  .nav-links li {
    width: 100%;
    text-align: center;
  }

  .nav-links a {
    text-decoration: none;
    display: block;
    color: var(--color-black-main);
    padding-block: var(--spacing-1_5);

    @media (--breakpoint-min-md) {
      padding-block: var(--spacing-1_5);
    }
  }

  .nav-links .active {
    color: var(--color-white-main);
    background: var(--color-green-main);
  }

  .close-menu-li {
    border-block-start: 1px solid var(--color-black-main);
    width: auto !important;

    @media (--breakpoint-min-md) {
      display: none;
    }
  }

  .close-menu {
    border: none;
    background: none;
    padding-block: var(--spacing-1_5);
  }
</style>

<script>
  function openMenu(hamburger: HTMLButtonElement) {
    hamburger.setAttribute("aria-label", "Schliesse Navigationsmenu");
    hamburger.setAttribute("aria-expanded", "true");
    document.body.style.overflow = "hidden";
  }

  function closeMenu(hamburger: HTMLButtonElement) {
    hamburger.setAttribute("aria-label", "Öffne Navigationsmenu");
    hamburger.setAttribute("aria-expanded", "false");
    document.body.style.overflow = "auto";
  }

  const hamburgerButton = document.querySelector(
    ".hamburger"
  ) as HTMLButtonElement;
  const closeMenuButton = document.querySelector(
    ".close-menu"
  ) as HTMLButtonElement;

  hamburgerButton.addEventListener("click", () => {
    const wasOpen = hamburgerButton.getAttribute("aria-expanded") === "true";
    wasOpen ? closeMenu(hamburgerButton) : openMenu(hamburgerButton);
  });

  closeMenuButton.addEventListener("click", () => {
    closeMenu(hamburgerButton);
  });
</script>
